<?php
// +----------------------------------------------------------------------
// | 登录退出控制器
// +----------------------------------------------------------------------
// | Copyright (c) 2019 http://www.jeoshi.com All rights reserved.
// +----------------------------------------------------------------------
// | Author: kevin
// +----------------------------------------------------------------------

namespace app\v1\controller;

use app\common\controller\PublicController as Controller;
use think\Config;
use think\Hook;
use think\Validate;

class Login extends Controller
{
    /**
     * 初始化
     */
    public function _initialize()
    {
        parent::_initialize();
        $this->assign('url', $this->request->get('url', '/'));
    }

    /**
     * 登录
     * @return string
     */
    public function index()
    {
        $url = $this->request->get('url', '/');
        if ($this->auth->isLogin()) {
            return $this->redirect($url);
        }
        // 根据客户端的cookie,判断是否可以自动登录
        if ($this->auth->autologin()) {
            $this->redirect($url);
        }

        if ($this->request->isPost()) {
            $username = $this->request->post('username');
            $password = $this->request->post('password');
            $token = $this->request->post('__token__');
            $rule = [
                'username'  => 'require|length:1,30',
                'password'  => 'require|length:3,30',
                '__token__' => 'token',
            ];
            $data = [
                'username'  => $username,
                'password'  => $password,
                '__token__' => $token,
            ];

            $validate = new Validate($rule, [], ['username' => __('姓名'), 'password' => __('密码'), 'captcha' => __('图片验证码')]);
            $result = $validate->check($data);
            if (!$result) {
                $this->error($validate->getError(), $url, ['token' => $this->request->token()]);
            }
            $keeplogin = Config::get('site.logintime');
            $result = $this->auth->login($username, $password, $keeplogin ? $keeplogin * 60 : 86400);
            if ($result === true) {
                Hook::listen("admin_login_after", $this->request);
                $this->success(__('登录成功'), $url, ['type' => 'login', 'url' => $url, 'id' => $this->auth->id, 'username' => $username]);
            } else {
                $msg = $this->auth->getError();
                $msg = $msg ? $msg : __('Username or password is incorrect');
                $this->error($msg, $url, ['token' => $this->request->token()]);
            }
        }

        return parent::fetchAuto();
    }

    /**
     * 退出
     * @return string
     */
    public function logout()
    {
        $this->auth->logout();
        Hook::listen("admin_logout_after", $this->request);

        $this->redirect(Config::get('url.login'));
    }

    /**
     * 锁屏
     * @return string
     */
    public function locks()
    {
        return parent::fetchAuto();
    }
}
