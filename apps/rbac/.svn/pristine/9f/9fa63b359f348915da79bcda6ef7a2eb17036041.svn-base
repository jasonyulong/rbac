<?php
// +----------------------------------------------------------------------
// | 组织架构相关数据同步
// +----------------------------------------------------------------------
// | Copyright (c) 2019 http://www.jeoshi.com All rights reserved.
// +----------------------------------------------------------------------
// | Author: kevin
// +----------------------------------------------------------------------

namespace app\command\toerp;


use think\console\Input;
use think\console\Output;
use think\Config;

class Organization
{
    /**
     * 输入对象
     * @var Input
     */
    private $input;

    /**
     * 输出对象
     * @var Output
     */
    private $output;

    /**
     * 构造函数
     * Orders constructor.
     * @param Input $input 输入对象
     * @param Output $output 输出对象
     */
    public function __construct(Input $input, Output $output)
    {
        $this->input = $input;
        $this->output = $output;
    }

    /**
     * 同步数据
     */
    public function run()
    {
        $start = strtotime("-10 minute");

        $erpOrgModel = new \app\common\model\erp\Organization();
        $erpAccountModel = new \app\common\model\erp\EbayAccount();

        $usermodel = new \app\common\model\Users();
        $organizationModel = new \app\common\model\Organization();

        $organizations = $organizationModel->where('createtime|updatetime', 'EGT', $start)->select();
        if (count($organizations) <= 0) {
            $this->output->writeln("sync users total:" . count($organizations));
        }
        // 已经存在的部门
        $erpOrgIds = $erpOrgModel->column('id');
        // 已经存在的用户
        $userIds = [];
        $users = $usermodel->column('id,username,company_id,job_id,job_type');
        foreach ($users as $user) {
            $userIds[$user->id] = $user;
        }

        // 生成部门代码
        $code = function ($id, $rank) {
            $arr = [1 => 'A', 2 => 'B', 3 => 'C', 4 => 'D', 5 => 'E', 6 => 'F'];

            return $arr[$rank] . ($id >= 100 ? $id : '0' . $id);
        };

        foreach ($organizations as $org) {
            $orgData = [
                'code' => $code($org->id, $org->rank),
                'parent_id' => $org->pid,
                'tid' => $org->tid,
                'lid' => $org->lid,
                'rid' => $org->rid,
                'name' => $org->title,
                'level' => $org->rank,
                'manage' => $org->manage,
                'manage_uid' => $org->manage_uid,
                'org_status' => $org->status,
                'company_id' => $userIds[$org->manage_uid]['company_id'] ?? 1,
                'attr_id' => $userIds[$org->manage_uid]['job_type'] ?? 1,
            ];

            $orgusers = $orgproperty = $orgebay = [];
            // 部门成员
            if ($org->orgusers) {
                foreach ($org->orgusers as $orguser) {
                    $orgusers[] = [
                        'organize_id' => $orguser->org_id,
                        'user_id' => $orguser->user_id,
                        'user_name' => $orguser->user_name,
                        'binding' => $org->tid == 19 ? 1 : 0,
                        'status' => $orguser->status,
                        'company_id' => $userIds[$orguser->user_id]['company_id'] ?? 1,
                        'attr_id' => $userIds[$orguser->user_id]['job_type'] ?? 1,
                    ];
                }
            }
            // 绑定帐号
            if ($org->orguserAccounts) {
                foreach ($org->orguserAccounts as $account) {
                    // ebay特殊处理
                    if ($account->platform == 'ebay') {
                        $orgebay[] = [
                            'organize_id' => $account->org_id,
                            'user_id' => $account->user_id,
                            'account' => $account->platform_account,
                            'store_id' => $account->store_id,
                            'locations' => $account->locations,
                            'sales_label' => $account->sales_label
                        ];
                    } else {
                        $keys = $account->user_id . $account->org_id . $account->platform;
                        $orgproperty[$keys][] = [
                            'organize_id' => $account->org_id,
                            'user_id' => $account->user_id,
                            'options' => 1,
                            'groups' => $account->platform,
                            'value' => $account->platform_account,
                        ];
                    }
                }
            }
            // 开始更新数据

        }
        $this->output->writeln("success");
    }
}