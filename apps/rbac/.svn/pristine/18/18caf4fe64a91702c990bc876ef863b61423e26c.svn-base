<?php
 // +----------------------------------------------------------------------
// | 用户相关API请求入口
// +----------------------------------------------------------------------
// | Copyright (c) 2019 http://www.jeoshi.com All rights reserved.
// +----------------------------------------------------------------------
// | Author: kevin
// +----------------------------------------------------------------------

namespace app\api\controller\v1;

use think\Config;
use think\Cookie;
use plugin\Crypt;
use app\common\controller\ApiController;
use app\api\service\User;


/**
 * 用户相关API请求入口
 * Class Index
 * @package app\api\controller
 */
class Users extends ApiController
{
    /**
     * @desc 不需要检查是否登录的ACTION 全部用 * 代替
     * @var  array
     */
    protected $noNeedLogin = ['*'];

    /**
     * @desc  不需要校验权限的ACTION 全部用 * 代替
     * @var   array
     */
    protected $noNeedRight = ['*'];

    /**
     * @desc   登录
     * @author mina
     * @param  post
     * @return json
     */
    public function login()
    {
        if (!$this->request->isPost())
        {
            $this->error(__('Request Method Error'));
        }
        $param = $this->request->post();
        $result = User::getInstance()->login($param);
        if($result['status'] == 1)
        {
            //$this->success('success', Crypt::encrypt(json_encode($result['data'])));
            $this->success('success', $result['data']);
        }
        else
        {
            $this->error(__($result['message']), '', $result['status']);
        } 
    }

    /**
     * @desc   退出
     * @author mina
     * @param  void
     * @return json
     */
    public function loginout()
    {
        if (!$this->request->isPost())
        {
            $this->error(__('Request Method Error'));
        }
        $param = $this->request->post();
        $result = User::getInstance()->loginout($param);
        if($result['status'] == 1)
        {
            $this->success('success', Crypt::encrypt(json_encode($result['data'])));
        }
        else
        {
            $this->error(__($result['message']), '', $result['status']);
        } 
    }

    /**
     * @desc   检查token是否过期
     * @author mina
     * @param  void
     * @return json
     */
    public function cktoken()
    {
        if (!$this->request->isPost())
        {
            $this->error(__('Request Method Error'));
        }
        $param = $this->request->post();
        $result = User::getInstance()->cktoken($param);
        if($result['status'] == 1)
        {
            $this->success('success', Crypt::encrypt(json_encode($result['data'])));
        }
        else
        {
            $this->error(__($result['message']), '', $result['status']);
        } 
    }

    /**
     * @desc   15天授权
     * @author mina
     * @param  void
     * @return json
     */
    public function authorize()
    {
        if (!$this->request->isPost())
        {
            $this->error(__('Request Method Error'));
        }
        $param = $this->request->post();
        $result = User::getInstance()->authorize($param);
        if($result['status'] == 1)
        {
            $this->success('success', Crypt::encrypt(json_encode($result['data'])));
        }
        else
        {
            $this->error(__($result['message']), '', $result['status']);
        } 
    }
}
